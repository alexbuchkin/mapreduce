csvreduce:


описание файлов-исходников:

csvreduce.h: содержит функцию main, создаёт класс-интерпретатор rInterpretator, используя аргументы командной строки

executer.h: содержит класс executer для вычисления полиз-выражений

filewrapper.h: содержит класс fileWrapper для работы с файлами

lex.h: содержит enum lexType, класс Lex

raparser.h: содержит класс raParser - синтаксический анализатор выражений агрегации

rkparser.h: содержит класс rkParser - синтаксический анализатор ключевых столбцов

rinterpretator.h: содержит класс rInterpretator - основной класс утилиты

parser.h: содержит класс Parser - базовый класс для классов rkParser и raParser

scanner.h: содержит класс Scanner - общий лексический анализатор, таблицы разделителей и ключевых слов

table.h: содержит класс table для хранения идентификаторов и констант


описания классов:

class Lex - класс-лексема, хранит тип лексемы и дополнительную информацию (переменную int), в частности, индекс таблицы
Методы: конструктор, operator==

class Table - таблица идентификаторов, хранит уникальные идентификаторы
Методы: put, find, operator[]

class Scanner - лексический анализатор, общий для всех утилит и грамматик
Методы: конструктор, gl (возвращает очередную лексему)

class Scanner - базовый синтаксический анализатор, является базовым классом для конкретных синтаксических анализаторов
Методы: конструктор, getConstant, getName (происходит обращение к соответствующим таблицам вложенного объекта класса Scanner)

class raParser (reduce aggregation parser) - синтаксический анализатор для выражения агрегации, наследует класс Parser.
После запуска процедуры analyze будет содержать полиз-запись выражения агрегации
Содержит названия результирующих столбцов
Методы: процедуры для рекурсивного спуска

class rkParser (reduce keys parser) - синтаксический анализатор для ключевых столбцов, наследует класс Parser
После запуска процедуры analyze будет содержать индексы ключевых столбцов
Методы: процедуры для рекурсивного спуска

class Executer - надстройка над стеком для вычисления полиз-выражений
Методы: put (для bool, double, lexType), getBool, getDouble

class fileWrapper - обёртка для входного и выходного файлов, содержит эти файлы, а также названия всех исходных столбцов и их значения в конкретной строке (обновляются каждый раз при считывании очередной строки из файла)
Методы: конструктор, деструктор, put (пишет в выходной файл, для строки и для double), getValue (получает значение нужного столбца), nextString (считывает новую строку и выполняет все связанные с этим действия (обновление значений и пр.), возвращает bool)

class rInterpretator - главный класс, содержит классы raParser, rkParser, fileWrapper, инициализируется в main
Методы: isEqual, updateKeys, updateFunc, fillFunc, a, run
isEqual - проверяет, равны ли значения ключевых столбцов в текущей и предыдущей строке
updateKeys - обновляет значения ключевых столбцов
updateFunc - производит необходимые действия для промежуточного подсчёта функций
fillFunc - заполняет значения функций в первый раз
a - выполняет агрегацию
